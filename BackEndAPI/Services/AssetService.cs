using System.Linq;
using BackEndAPI.Interfaces;
using BackEndAPI.Models;
using System.Collections.Generic;
using System.IdentityModel.Tokens.Jwt;
using System.Text;
using BackEndAPI.Helpers;
using Microsoft.Extensions.Options;
using Microsoft.IdentityModel.Tokens;
using System.Security.Claims;
using System;
using System.Threading.Tasks;
using BackEndAPI.Entities;
using BackEndAPI.Enums;
using AutoMapper;

namespace BackEndAPI.Services
{
    public class AssetService : IAssetService
    {

        private readonly IMapper _mapper;
        private readonly IAsyncAssetRepository _assetRepository;
        private readonly IAsyncAssetCategoryRepository _cateRepository;

        public AssetService(IAsyncAssetRepository assetRepository, IAsyncAssetCategoryRepository cateRepository, IMapper mapper)
        {
            _assetRepository = assetRepository;
            _cateRepository = cateRepository;
            _mapper = mapper;
        }

        public async Task<Asset> Create(CreateAssetModel model)
        {

            if (model == null)
            {

                throw new ArgumentNullException(Message.NullAsset);

            }

            Asset asset = _mapper.Map<Asset>(model);

            var assetNumber = _assetRepository.CountingAssetNumber(asset.CategoryId);
            if (assetNumber < 0)
            {
                throw new Exception(Message.AssetNumberError);
            }

            var category = await _cateRepository.GetById(asset.CategoryId);
            if (category == null)
            {

                throw new Exception(Message.InvalidId);
                
            }

            asset.AssetCode = AutoGenerator.AutoGeneratedAssetCode(assetNumber, category.CategoryCode);

            return await _assetRepository.Create(asset);

        }
    }
}